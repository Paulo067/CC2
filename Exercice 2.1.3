#EXERCICE 2.2.3

# question a) et b) 

# Loi Poisson composée
#
xx<-seq(0,2000,50)

lam<-2
EM<-lam
VarM<-EM
#
# Loi de sinistre: lognormale
#
a2<-log(100)-0.32
b2<-0.8
EB<-exp(a2+(b2^2)/2)
EB2<-exp(2*a2+2*(b2^2))
VarB<-EB2-(EB^2)
# 
EX<-EM*EB
VarX<-EM*VarB+VarM*(EB^2)
c(EX,VarX)
SigX<-sqrt(VarX)

# question c)
mm<-1000000
vM<-rep(0,mm)
vX<-rep(0,mm)
set.seed(2019)

for (j in 1:mm)
{
  vM[j]<-qpois(runif(1),lam)
  if (vM[j]>0) vX[j]<-sum(qlnorm(runif(vM[j]),a2,b2))
}
cbind(vM,vX)

# question d)
select<-c(1,2,3,4,5,mm)
vXselec<-vX[select]
vXselec

# question e)
tvX<-sort(vX)
select2<-c(1,mm/2,mm)
tvXselect2<-tvX[select2]
tvXselect2

# question f)
mean(vX)


X0<-sum(vX<=0)/mm
X0


# question g)

var(vX)
max(vX)

# question h)
Fn<-rep(0,41)
for(i in 1:41)
{
  Fn[i]<-sum(vX<=xx[i])/mm
}


plot(c(0,xx),c(X0,Fn),type="l",xlab = "x",ylab="F(x)",lty=1, lwd=2,col="blue",main="Fonction de réparition de X",ylim = c(0,1))
abline(v=EX,col="purple", lty=2, lwd=2)
legend(700, 0.2, legend=c("Fonction de réparition","E[X] par simulation"),lty=c(1,2), cex=1.1,bg='lightgrey',lwd=2:2,col=c("blue","purple"))

#question i)
#espérance tronquée
long2<-length(xx)
Xsupx<-rep(0,long2)
for(i in 1:long2)
{
  T[i]<-sum(vX*(vX>xx[i]))/mm
}
cbind(xx,T)

plot(xx,T,type="l",xlab = "x",ylab="E[X * 1 {X>x}]",lty=1, lwd=2,col="blue",main="Espérance tronquée de X par simulation")
abline(h=EX,col="purple", lty=2, lwd=2)
legend(720, 190, legend=c("Espérance tronquée","E[X] par simulation"),lty=c(1,2), cex=1.1,bg='lightgrey',lwd=2:2,col=c("blue","purple"))

#question j)
#stop-loss
long2<-length(xx)
st<-rep(0,long2)
for(i in 1:41)
{
  st[i]<-(xx[i]*(1-sum(vX<=xx[i])))/mm
}

esPI<-T-xx*(1-Fn)

cbind(xx,esPI)

plot(xx,esPI,type="l",xlab = "x",ylab="PI(x)",lty=1, lwd=2,col="blue",main="Fonction Stop-Loss par simulation")
abline(h=EX,col="purple", lty=2, lwd=2)
legend(850, 190, legend=c("Stop-Loss","E[X] par simulation"),lty=c(1,2), cex=1.1,bg='lightgrey',lwd=2:2,col=c("blue","purple"))

#question k)
k<-c(0.001, 0.01, 0.05, 0.5, 0.95, 0.99, 0.999)
j<-seq(0.01,0.99,0.01)
h<-c(0.001)
z<-c(0.999)
b<-c(h,j,z)

VaRX<-quantile(vX,probs=k,type=1)
bVaRX<-quantile(vX,probs=b,type=1)
plot(b,bVaRX,type="l",xlab = "x",ylab="VaR",lty=1, lwd=2,col="blue",main="Value at Risk")
points(k,VaRX,col="red",lty=2,lwd=2)
abline(h=EX,col="purple", lty=2, lwd=2)
legend(0, 1270, legend=c("Value at Risk par simulation","VaR calculés en k","E[X] par simulation"),pch=c(NA,1,NA),lty=c(1,NA,2), cex=1.1,bg='lightgrey',lwd=2:2,col=c("blue","red","purple"))

#question l)
long<-length(k)
TVaRX<-rep(0,long)
for(i in 1:long)
{
  TVaRX[i]<-sum(vX*(vX>VaRX[i]))/mm/(1-k[i])+VaRX[i]*(sum(vX<=VaRX[i])/mm-k[i])/(1-k[i])
}
round(cbind(k,VaRX,TVaRX),4)

long1<-length(b)
bTVaRX<-rep(0,long1)
for(i in 1:long1)
{
  bTVaRX[i]<-sum(vX*(vX>bVaRX[i]))/mm/(1-b[i])+bVaRX[i]*(sum(vX<=bVaRX[i])/mm-b[i])/(1-b[i])
}

plot(b,bTVaRX,type="l",xlab = "k",ylab="TVaR",lty=1, lwd=2,col="blue",main="Tail Value at Risk")
points(k,TVaRX,col="red",lty=2,lwd=2)
abline(h=EX,col="purple", lty=2, lwd=2)
legend(0, 1600, legend=c("TVAR par simulation","TVaR calculés en k","E[X] par simulation"),pch=c(NA,1,NA),lty=c(1,NA,2), cex=1.1,bg='lightgrey',lwd=2:2,col=c("blue","red","purple"))


#question i)
#espérance tronquée
long2<-length(xx)
Xsupx<-rep(0,long2)
for(i in 1:long2)
{
  T[i]<-sum(vX*(vX>xx[i]))/mm
}
cbind(xx,T)

plot(xx,T,type="l",xlab = "x",ylab="E[X * 1 {X>x}]",lty=1, lwd=2,col="blue",main="Espérance tronquée de X par simulation")
abline(h=EX,col="purple", lty=2, lwd=2)
legend(720, 190, legend=c("Espérance tronquée","E[X] par simulation"),lty=c(1,2), cex=1.1,bg='lightgrey',lwd=2:2,col=c("blue","purple"))

#question j)
#stop-loss
long2<-length(xx)
st<-rep(0,long2)
for(i in 1:41)
{
  st[i]<-(xx[i]*(1-sum(vX<=xx[i])))/mm
}

esPI<-T-xx*(1-Fn)

cbind(xx,esPI)

plot(xx,esPI,type="l",xlab = "x",ylab="PI(x)",lty=1, lwd=2,col="blue",main="Fonction Stop-Loss par simulation")
abline(h=EX,col="purple", lty=2, lwd=2)
legend(850, 190, legend=c("Stop-Loss","E[X] par simulation"),lty=c(1,2), cex=1.1,bg='lightgrey',lwd=2:2,col=c("blue","purple"))
